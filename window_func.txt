Postgresql Windows Function
CUME_DIST	Mevcut satırın göreceli sırasını döndür.
DENSE_RANK	Arttırmayı Düzenli Olarak Arttır 
FIRST_VALUE	Ilk Satırı Alır Hepsine Koyar
LAG	        Bir Onceki Degeri Verir
LAST_VALUE	Sonda ki Degeri Verir
LEAD            Bi Onceki Degeri Verir
NTILE	        Satır Sayısını Bolme
PERCENT_RANK	Degerleri Oransal Olarak Verir
RANK	        Sıra Verme 
ROW_NUMBER      Sıra Verme

Yukardakilierin Hepsinin Ornek Olarak Vericem

Tablo Olarak : Payment
-----------------------------------
Payment_id  Customer_id  Amount
1             44          100	
2             44          200
3             44          50
4             12          90
5             12          22
6             78          190

-----------------------------------
Select * , dense_rank() over(order by Customer_id) from payment ; 
Sırayla Devam Eder

Payment_id  Customer_id  Amount Dense_Rank
1             44          100	1
2             44          200   1
3             44          50    1
4             12          90    2
5             12          22    2
6             78          190   3

Select * , rank() over(order by Customer_id) from payment ;
Ustune Koyarak Ilerler

Payment_id  Customer_id  Amount Rank
1             44          100	1
2             44          200   1
3             44          50    1
4             12          90    3
5             12          22    3
6             78          190   5

Select * , firt_value(Customer_id) over(order by payment_id) from payment ;
Ilk Degeri Alir

Payment_id  Customer_id  Amount first_value
1             44          100	44
2             44          200   44
3             44          50    44
4             12          90    44
5             12          22    44
6             78          190   44

Select Payment_id,Amount , lag(Amount) over(order by Payment_id) from payment ; 
Bir Onceki Degeri Verir
Payment_id   Amount  Lag
1              100   'Null'
2              200   100
3              50    200
4              12    50
5              22    12
6              190   22


Select * , last_value(customer_id) over(order by payment_id) from payment ; 
Son Degeri Verir

Payment_id  Customer_id  Amount Last_valıe
1             44          100	78
2             44          200   78
3             44          50    78
4             12          90    78
5             12          22    78
6             78          190   78

select * , lead(amount) over(order by payment_id) from payment ; 
Bir Sonraki Alir

Payment_id  Customer_id  Amount Lead
1             44          100	200
2             44          200   50
3             44          50    90
4             12          90    22
5             12          22    190
6             78          190   'Null'

Select * , ntile(amount,2) over(order by payment_id) from payment ;
Amount Bolumu Uc Satıra Boldu

Payment_id  Customer_id  Amount Ntile
1             44          100	1
2             44          200   1
3             44          50    2
4             12          90    2
5             12          22    3
6             78          190   3

Select *, row_number() over(order by payment_id) from payment ;

Payment_id  Customer_id  Amount Row_Number
1             44          100	1
2             44          200   2
3             44          50    3
4             12          90    4
5             12          22    5
6             78          190   6


Over(Partition By - Order By - ) Kullanarakta Bolumlendirip Siralayabilirsiniz

